---
image: docker:git

stages:
  - build changed images
  - build all images
  - mirroring

build-changed-image:
  stage: build changed images
  script:

    - |
      # figure out changes
      topdirlist=$(git diff --name-only $(git rev-parse HEAD~1) $(git rev-parse HEAD) | sed -e "s|/.*||g" | sort -u)
      echo "top level directory candidates with changed files: $topdirlist"
      
      # on master branch, we also trigger publishing the image
      if [ $CI_COMMIT_REF_NAME == 'master' ]; then
        export PUSH_TO_REPOSITORY=$CI_DOCKER_REPOSITORY_PUBLISH
      fi

      # try to build all changed top level directories
      ./build_and_push.sh $topdirlist

build-all-images:
  stage: build all images
  when: manual
  script:
    - |
      # on master branch, we also trigger publishing the image
      if [ $CI_COMMIT_REF_NAME == 'master' ]; then
        export PUSH_TO_REPOSITORY=$CI_DOCKER_REPOSITORY_PUBLISH
      fi

      # build all nb-directories
      ./build_and_push.sh nb-*

mirroring:
  stage: mirroring
  image: python:3.8
  variables:
    GITHUB_MIRROR: git@github.com:CSCfi/notebooks-public-images.git
  script:
    - mkdir mirror_dir
    - cd mirror_dir
    - echo "cloning the gitlab.ci repo"
    - git clone $CI_REPOSITORY_URL notebooks-public-images
    - cd notebooks-public-images
    - echo "pushing to github repo"
    - git checkout master
    - mkdir ~/.ssh
    - echo -e "Host github.com\n    StrictHostKeyChecking no\n" >> ~/.ssh/config
    - eval `ssh-agent -s`
    - ssh-agent bash -c 'ssh-add /root/ssh/notebooks-public-images-key/id_rsa; git push $GITHUB_MIRROR master'
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
